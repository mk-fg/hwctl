[main]
# reader-name: any part of the NFC reader name needed for unique match
# Not needed with just one, see --debug output for names of all detected readers
reader-name = ACR122U
# reader-timeout: waiting for NFC tag with hwctl-enabled reader or after script start
reader-timeout = 3m
# reader-warmup: how long to wait for reader device to appear
reader-warmup = 3.0
# exit-timeout (optional): exit after period of inactivity, e.g. if started from .path unit
exit-timeout = 10m

[hwctl-reader-control]
# Optional section for tailing a button-press log-file from hwctl.py script,
#  intended for enabling/disabling NFC reader on some button-press event there.
# If not used (or log-file/hwctl-fifo are empty), reader is assumed to be pre-enabled.
# Checks log-tail-bytes on start, picking up any entries within log-time-slack from now.
# After that runs same as "tail -F <log-file>" would,
#  using fifo-enable-btns numbers to enable reader via fifo path,
#  and disable it after reader-timeout via fifo-disable command(s), if any.
log-file = /tmp/hwctl.btns.log
log-tail-bytes = 10240
log-time-slack = 40s
fifo = /tmp/hwctl.fifo
fifo-enable-btns = 0:usb2=on
fifo-disable = usb2=off

[action: floss]
# uid: NFC tag UID, with any non-hex stuff like spaces stripped
uid = 1f 1234 5678 abcd
# run: command can have '...' arguments with spaces and ''-escapes in them
run = printf 'RUN :: arg1 - with spaces: ''%s'', arg2 - empty: ''%s''\n' 'hello world' ''
# stdin (optional): any leading/trailing spaces are stripped
stdin = some secret words
# stop-timeout (optional): command will be quietly terminated after this, if set
#stop-timeout = 10m
